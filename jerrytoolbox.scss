//        ____________  ______  __   __________  ____  __    ____  ____ _  __
//       / / ____/ __ \/ __ \ \/ /  /_  __/ __ \/ __ \/ /   / __ )/ __ \ |/ /
//  __  / / __/ / /_/ / /_/ /\  /    / / / / / / / / / /   / __  / / / /   / 
// / /_/ / /___/ _, _/ _, _/ / /    / / / /_/ / /_/ / /___/ /_/ / /_/ /   |  
// \____/_____/_/ |_/_/ |_| /_/    /_/  \____/\____/_____/_____/\____/_/|_|  
                                                                          

// Set a rem font size with pixel fallback \\

@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}
/*
p {
  @include font-size(14px)
}
*/

// Breakpoints \\

@mixin bpmw-large {
  @media only screen and (max-width: 60em) {
    @content;
  }
}

@mixin bpmw-medium {
  @media only screen and (max-width: 40em) {
    @content;
  }
}

@mixin bpmw-small {
  @media only screen and (max-width: 30em) {
    @content;
  }
}

/*
.sidebar {
  width: 60%
  float: left;
  margin: 0 2% 0 0;
  @include bp-small {
    width: 100%;
    float: none;
    margin: 0;
  }
}
*/

// SVG background images with PNG and retina fallback

$image-path: '../img' !default;
$fallback-extension: 'png' !default;
$retina-suffix: '@2x';
@mixin background-image($name, $size:false) {
  background-image: url(#{$image-path}/#{$name}.svg);
  @if($size){
    background-size: $size;
  }
  .no-svg &{
    background-image: url(#{$image-path}/#{$name}.#{$fallback-extension});
    @media only screen and (-moz-min-device-pixel-ratio: 1.5), only screen and (-o-min-device-pixel-ratio: 3/2), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-device-pixel-ratio: 1.5) {
    	background-image: url(#{$image-path}/#{$name}#{$retina-suffix}.#{$fallback-extension});
  	}
  }
}
/*
body {
  @include background-image('pattern');
}
*/

// Background images with retina

@mixin background-image-retina($file, $type, $width, $height) {
  background-image: url($file + '.' + $type);
  @media only screen and (-webkit-min-device-pixel-ratio: 2),
    only screen and (-moz-min-device-pixel-ratio: 2),
    only screen and (-o-min-device-pixel-ratio: 2/1),
    only screen and (min-device-pixel-ratio: 2),
    only screen and (min-resolution: 192dpi),
    only screen and (min-resolution: 2dppx){
    & {
      background-image: url($file + '@2x.' + $type);
      -webkit-background-size: $width $height;
      -moz-background-size: $width $height;
      -o-background-size: $width $height;
      background-size: $width $height;
    }
  }
}
/*
.logo {
  width: 200px;
  height: 100px;
  @include background-image-retina(logo, png, 200px, 100px);
}
*/

// Animations and keyframes

@mixin keyframes($animation-name) {
  @-webkit-keyframes $animation-name {
    @content;
  }
  @-moz-keyframes $animation-name {
    @content;
  }  
  @-ms-keyframes $animation-name {
    @content;
  }
  @-o-keyframes $animation-name {
    @content;
  }  
  @keyframes $animation-name {
    @content;
  }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};      
}

/*
@include keyframes(slide-down) {
  0% { opacity: 1; }
  90% { opacity: 0; }
}

.element {
  width: 100px;
  height: 100px;
  background: black;
  @include animation('slide-down 5s 3');
}
*/

// Transitions

@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}
/*
a {
  color: gray;
  @include transition(color .3s ease);
  &:hover {
    color: black;
  }
}
*/

// Clearfix

%clearfix {
  *zoom: 1;
  &:before {
    content: " ";
    display: table;
  }
  &:after {
    content: " ";
    display: table;
    clear: both;
  }
}
/*
.container-with-floated-children {
  @extend %clearfix;
}
*/

// Visually hide an element
%visuallyhidden {
  margin: -1px;
  padding: 0;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip: rect(0, 0, 0, 0);
  position: absolute;
}
/*
<button class="mobile-navigation-trigger">
  <b class="visually-hidden">Open the navigation</b>
  <img src="img/mobile-navigation-icon.svg">
</button>
-----------------------------------------------------
.visually-hidden {
  @extend %visuallyhidden;
}
*/

// Image Cicrcle
@mixin img-circle($value) {
  -webkit-border-radius: $value;
  -moz-border-radius: $value;
  border-radius: $value;
}